{"version":3,"sources":["constants/Common.js","utils/getTimeDifference.js","hoc/WithFetchData.js","components/Tab.js","components/StoryWrapper.js","components/Home.js","components/Login.js","components/Bookmarks.js","components/Register.js","components/AskStory.js","components/JobStory.js","components/NewStory.js","components/SingleComment.js","services/getCommentsByApi.js","components/CommentLists.js","components/Comments.js","components/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["NEWS_PER_PAGE","URL_BASE","URL_ITEM","getTimeDifference","previousTimestamp","elapsed","Date","now","Math","round","msPerMinute","msPerHour","msPerDay","WithFetchData","story","WrappedComponent","_React$Component","DataFetch","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDataFromApi","indexOfLastNews","state","currentPage","indexOfFirstNews","axios","get","concat","then","res","setState","noOfMaxPage","ceil","data","length","i","response","newstory","id","by","type","title","url","points","score","commentIdArray","kids","time","isMounted","stories","toConsumableArray","isLoading","catch","error","onPreviousClick","onNextClick","inherits","createClass","key","value","react_default","a","createElement","nextPage","React","Component","Tab","dropDown","document","getElementById","classList","toggle","onLogOut","userName","window","localStorage","setItem","JSON","stringify","active","currentUser","parse","getItem","username","login","className","onClick","Link","to","StoryWrapper","props","listItems","map","isLogin","class","onBookMarkClick","href","pathname","components_Tab","disabled","components_StoryWrapper","onNextPreviousClick","Login","handleSubmit","evt","preventDefault","storageData","forEach","password","alert","history","push","handleChange","_evt$target","target","name","handleClick","onSubmit","htmlFor","placeholder","onChange","required","BookMarks","bookmarks","Register","handleValidation","nameError","emailError","userNameError","passwordError","confirmPassword","email","includes","formErrors","user","noValidate","SingleComment","parent","text","getComment","_this2","err","dangerouslySetInnerHTML","__html","components_CommentLists","CommentLists","components_SingleComment","Comments","location","NotfoundPage","App","BrowserRouter","Switch","Route","exact","path","component","Home","AskStory","NewStory","JobStory","Bookmarks","NotFoundPage","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86f86b67.chunk.js","sourcesContent":["const API_ROOT = '/';\nconst API_ASKSTORY = '/askStory';\nconst API_JOBSTORY = '/jobStory';\nconst API_NEWSTORY = '/newStory';\nconst API_ITEM_ID = '/item/:id';\n\nconst NEWS_PER_PAGE = 20;\nconst LOGIN ='/login';\nconst REGISTER = '/register';\nconst BOOKMARKS = '/bookmarks';\n\nconst URL_BASE = 'https://hacker-news.firebaseio.com/v0/';\nconst URL_ITEM = 'https://hacker-news.firebaseio.com/v0/item/';\n\nexport { BOOKMARKS,API_ASKSTORY, API_ITEM_ID, API_JOBSTORY, API_ROOT, API_NEWSTORY,URL_BASE,URL_ITEM,NEWS_PER_PAGE,LOGIN,REGISTER};\n","export const getTimeDifference = previousTimestamp => {\n  const msPerMinute = 60 * 1000;\n  const msPerHour = msPerMinute * 60;\n  const msPerDay = msPerHour * 24;\n  const msPerMonth = msPerDay * 30;\n  const msPerYear = msPerDay * 365;\n\n  const currentTimestamp = Date.now();\n  const elapsed = currentTimestamp - previousTimestamp * 1000;\n\n  if (elapsed < msPerMinute) {\n    return Math.round(elapsed / 1000) + ' seconds ago';\n  } else if (elapsed < msPerHour) {\n    return Math.round(elapsed / msPerMinute) + ' minutes ago';\n  } else if (elapsed < msPerDay) {\n    return Math.round(elapsed / msPerHour) + ' hours ago';\n  } else if (elapsed < msPerMonth) {\n    return 'approximately ' + Math.round(elapsed / msPerDay) + ' days ago';\n  } else if (elapsed < msPerYear) {\n    return 'approximately ' + Math.round(elapsed / msPerMonth) + ' months ago';\n  } else {\n    return 'approximately ' + Math.round(elapsed / msPerYear) + ' years ago';\n  }\n};\n","import React from 'react';\nimport axios from 'axios';\n\nimport { URL_BASE, URL_ITEM, NEWS_PER_PAGE } from '../constants/Common';\nimport { getTimeDifference } from '../utils/getTimeDifference';\n\nconst WithFetchData = story => WrappedComponent => {\n  return class DataFetch extends React.Component {\n      constructor() {\n      super();\n\n      this.state = {\n        stories: [],\n        isLoading: false,\n        currentPage: 1,\n        noOfMaxPage:'',\n        isMounted: false\n      };\n    }\n\n    componentDidMount() {\n      this.getDataFromApi();\n      this.setState({ isLoading: true, isMounted: true });\n    }\n\n    componentWillUnmount() {\n      this.setState({ isMounted: false });\n    }\n\n    getDataFromApi = () => {\n      const indexOfLastNews = this.state.currentPage * NEWS_PER_PAGE;\n      const indexOfFirstNews = indexOfLastNews - NEWS_PER_PAGE;\n      axios.get(`${URL_BASE}${story}.json`).then(res => {      \n        this.setState({\n          noOfMaxPage:Math.ceil(res.data.length/NEWS_PER_PAGE)\n        })\n        for (let i = indexOfFirstNews; i < indexOfLastNews ; i++) {\n          axios\n            .get(`${URL_ITEM}${res.data[i]}.json`)\n            .then(response => {\n              const newstory = {\n                id: response.data.id,\n                by: response.data.by,\n                type: response.data.type,\n                title: response.data.title,\n                url: response.data.url,\n                points: response.data.score,\n                commentIdArray: response.data.kids,\n                time: getTimeDifference(response.data.time)\n              };\n              if (this.state.isMounted) {\n                this.setState({\n                  stories: [...this.state.stories, newstory],\n                  isLoading: false\n                });\n              }\n            })\n            .catch(error => {\n              return error;\n            });\n        }\n      });\n    };\n\n    onPreviousClick = () => {\n      this.setState(\n        {\n          stories: [],\n          currentPage: this.state.currentPage - 1\n        },\n        () => {\n          this.getDataFromApi();\n        }\n      );\n    };\n\n    onNextClick = () => {\n      this.setState(\n        {\n          stories: [],\n          currentPage: this.state.currentPage + 1\n        },\n        () => {\n          this.getDataFromApi();\n        }\n      );\n    };\n\n    render() {\n      return (    \n          <WrappedComponent\n            onPreviousClick = { this.onPreviousClick}\n            onNextClick = { this.onNextClick}\n            nextPage = {this.state.noOfMaxPage}\n            currentPage ={this.state.currentPage}\n            stories={this.state.stories}\n            getDataFromApi={this.getDataFromApi}\n            isLoading={this.state.isLoading}\n          />\n      );\n    }\n  };\n};\n\nexport default WithFetchData;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  API_ASKSTORY,\n  API_JOBSTORY,\n  API_ROOT,\n  API_NEWSTORY,\n  LOGIN,\n  BOOKMARKS\n} from '../constants/Common';\n\nclass Tab extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      active: 'Home',\n      userName: ''\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = JSON.parse(window.localStorage.getItem('currentUser'))\n    this.setState({\n      userName: currentUser.username\n    });\n  }\n\n dropDown = () => {\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  }\n    \n  onLogOut = () =>{\n    this.setState({\n      userName: ''\n    });\n    window.localStorage.setItem('currentUser',JSON.stringify(this.state.userName))\n  }\n  \n  render() {\n    const login = this.state.userName ? (\n      <div className='dropdown'>\n        <span className='dropbtn' onClick={this.dropDown}>{this.state.userName}</span>\n        <div id='myDropdown' className='dropdown-content'>\n          <span onClick ={this.onLogOut}>Log Out</span>\n          <Link to = {BOOKMARKS}>Bookmarks</Link>\n        </div>\n      </div>\n    ) : (\n      <Link to={LOGIN}>Login</Link>\n    );\n\n    return (\n      <div className='tabs clearfix'>\n        <div className='logo'>\n          <div className='wrapper'>\n            <Link to={API_ROOT}>\n              <h1>HACKER NEWS</h1>\n            </Link>\n          </div>\n        </div>\n        <div className='wrapper clearfix'>\n          <ul>\n            <li>\n              <Link to={API_NEWSTORY}>New Stories</Link>\n            </li>\n            <li>\n              <Link to={API_JOBSTORY}>Job</Link>\n            </li>\n            <li>\n              <Link to={API_ASKSTORY}>Ask</Link>\n            </li>\n            <div className='login'>{login}</div>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tab;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Tab from './Tab';\n\nconst StoryWrapper = (props) => {\n  const listItems = props.stories.map(story =>\n    props.isLoading ? (\n      <p>Loading</p>\n    ) : (\n      <li className='storylist' key={story.id}>\n      {props.isLogin ? (<div class=\"bookmark\" onClick ={ ()=> props.onBookMarkClick(story) }></div>\n      ):('') }\n        <a href={story.url}>{story.title}</a>\n        <div>\n          <span> {story.points} points | </span>\n          <span>by {story.by} | </span>\n          <span>approximately {story.time} | </span>\n          <Link to={{ pathname: `item/${story.id}`, state: { story: story } }}>\n            <span className='comments'>\n              comments ({story.commentIdArray ? story.commentIdArray.length : 0}\n              )\n            </span>\n          </Link>\n        </div>\n      </li>\n    )\n  );\n\n  return (\n    <div>\n      <Tab />\n      <div className='button_container clearfix'>\n        <div className='button_right'>\n          <button\n            onClick={props.onPreviousClick}\n            disabled={props.currentPage === 1}\n          >\n            &laquo; Prev\n          </button>\n          <span>{props.currentPage}</span>\n          <button\n            onClick={props.onNextClick}\n            disabled={props.currentPage === props.noOfMaxPage}\n          >\n            Next &raquo;\n          </button>\n        </div>\n      </div>\n      <div className='stories'>{listItems}</div>\n    </div>\n  );\n}\n\nexport default StoryWrapper;","import React from 'react';\n\nimport WithFetchData from '../hoc/WithFetchData';\nimport StoryWrapper from '../components/StoryWrapper';\n\nconst Home = props => {\n  return (\n    <StoryWrapper\n      stories={props.stories}\n      onPreviousClick={props.onPreviousClick}\n      onNextPreviousClick={props.onNextPreviousClick}\n      noOfMaxPage={props.noOfMaxPage}\n      currentPage={props.currentPage}\n    />\n  );\n};\n\nexport default WithFetchData('topstories')(Home);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n\n    const storageData = window.localStorage.getItem('userData');\n    const userData = JSON.parse(storageData);\n\n    userData.forEach(data => {\n      if (\n        data.username === this.state.username &&\n        data.password === this.state.password\n      ) {\n        alert('Logged in');\n        window.localStorage.setItem('currentUser', JSON.stringify(data));\n        this.props.history.push({ pathname: '/', state: data.username });\n      }\n    });\n  };\n\n  handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'username':\n        this.setState({\n          username: value\n        });\n        break;\n      case 'password':\n        this.setState({\n          password: value\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleClick = () =>{\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n      <div class =\"title-bar clearfix\">\n        <button type='button' onClick= {this.handleClick} className='cancelbtn' />\n      </div>\n        <div className='login-container'>\n          <h2>Login</h2>\n          <label htmlFor='uname'>\n            <b>Username</b>\n          </label>\n          <input\n            type='text'\n            placeholder='Enter Username'\n            onChange={this.handleChange}\n            name='username'\n            className='uname'\n            required\n          />\n          <label htmlFor='psw'>\n            <b>Password</b>\n          </label>\n          <input\n            type='password'\n            placeholder='Enter Password'\n            className='psw'\n            onChange={this.handleChange}\n            name='password'\n            required\n          />\n          <button type='submit' className='login-btn'>\n            Login\n          </button>\n          <label className='remember'>Remember me</label>\n          <input type='checkbox' name='remember' />\n          <div class='register-row'>\n            <span>Don't Have an account</span>\n            <Link to='/register'>Register</Link>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Tab from './Tab';\nimport WithFetchData from '../hoc/WithFetchData';\n\nconst BookMarks = props => {\n  const currentUser = window.localStorage.getItem('currentUser')\n    ? JSON.parse(window.localStorage.getItem('currentUser'))\n    : '';\n  const BookMarks = currentUser.bookmarks;\n  const listItems = BookMarks.map(story => (\n    <li className='storylist' key={story.id}>\n      <a href={story.url}>{story.title}</a>\n      <div>\n        <span> {story.points} points | </span>\n        <span>by {story.by} | </span>\n        <span>approximately {story.time} | </span>\n        <Link to={{ pathname: `item/${story.id}`, state: { story: story } }}>\n          <span className='comments'>\n            comments ({story.commentIdArray ? story.commentIdArray.length : 0})\n          </span>\n        </Link>\n      </div>\n    </li>\n  ));\n\n  return (\n    <div>\n      <Tab />\n      <div className='button_container clearfix'>\n        <div className='button_right'>\n          <button\n            onClick={props.onPreviousClick}\n            disabled={props.currentPage === 1}\n          >\n            &laquo; Prev\n          </button>\n          <span>{props.currentPage}</span>\n          <button\n            onClick={props.onNextClick}\n            disabled={props.currentPage === props.noOfMaxPage}\n          >\n            Next &raquo;\n          </button>\n        </div>\n      </div>\n      <div className='stories' />\n      {listItems}\n    </div>\n  );\n};\n\nexport default WithFetchData('')(BookMarks);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Initialstate = {\n  name: '',\n  email: '',\n  username: '',\n  password: '',\n  confirmPassword: '',\n  formErrors: {\n    name: '',\n    email: '',\n    username: '',\n    password: '',\n    confirmPassword: ''\n  }\n};\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      formErrors: {\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        confirmPassword: ''\n      }\n    };\n  }\n\n  handleValidation = () => {\n    let nameError = '';\n    let emailError = '';\n    let userNameError = '';\n    let passwordError = '';\n    let confirmPassword = '';\n\n    const userData = JSON.parse(window.localStorage.getItem('userData'));\n\n    userData.forEach(data => {\n      if (this.state.username === data.username) {\n        userNameError = 'Username already exists';\n      }\n      if (this.state.email === data.email) {\n        emailError = 'Email already exists';\n      }\n    });\n\n    if (!this.state.name) {\n      nameError = 'Please enter your name';\n    }\n    if (this.state.name.length < 3) {\n      nameError = 'Minimum character of 3 required';\n    }\n    if (!this.state.password) {\n      passwordError = 'Enter password';\n    }\n    if (!this.state.confirmPassword) {\n      confirmPassword = 'Enter Confirm password';\n    }\n    if (!this.state.email.includes('@')) {\n      emailError = 'Invalid email';\n    }\n    if (!this.state.username) {\n      userNameError = 'Enter a username';\n    }\n    if (this.state.password !== this.state.confirmPassword) {\n      confirmPassword = 'Did not match password';\n    }\n    if (\n      nameError ||\n      emailError ||\n      userNameError ||\n      confirmPassword ||\n      passwordError\n    ) {\n      this.setState({\n        formErrors: {\n          name: nameError,\n          email: emailError,\n          username: userNameError,\n          password: passwordError,\n          confirmPassword: confirmPassword\n        }\n      });\n      return false;\n    }\n    return true;\n  };\n\n  handleSubmit = evt => {\n    var user = JSON.parse(localStorage.getItem('userData')) || [];\n    evt.preventDefault();\n    const isValid = this.handleValidation();\n    if (isValid) {\n      user.push({\n        name: this.state.name,\n        email: this.state.email,\n        username: this.state.username,\n        password: this.state.password\n      });\n      window.localStorage.setItem('userData', JSON.stringify(user));\n      this.props.history.push('/login');\n    }\n  };\n\n  handleChange = evt => {\n    evt.preventDefault();\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        this.setState({\n          name: value\n        });\n        break;\n      case 'email':\n        this.setState({\n          email: value\n        });\n        break;\n      case 'uname':\n        this.setState({\n          username: value\n        });\n        break;\n      case 'psw':\n        this.setState({\n          password: value\n        });\n        break;\n      case 'cpsw':\n        this.setState({\n          confirmPassword: value\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  handleClick = () =>{\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} noValidate>\n        <div class='title-bar clearfix'>\n          <button type='button' onClick= {this.handleClick} className='cancelbtn' />\n        </div>\n        <div className='login-container'>\n          <h2>Register</h2>\n          <label htmlFor='name'>\n            <b>Your Name *</b>\n          </label>\n          <input\n            type='text'\n            placeholder='Enter your name'\n            name='name'\n            value={this.state.name}\n            onChange={this.handleChange}\n            noValidate\n          />\n          <div className='required'>{this.state.formErrors.name}</div>\n          <label htmlFor='email'>\n            <b>Your Email *</b>\n          </label>\n          <input\n            type='email'\n            placeholder='Enter your email'\n            name='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n            noValidate\n          />\n          <div className='required'>{this.state.formErrors.email}</div>\n          <label htmlFor='uname'>\n            <b>Username *</b>\n          </label>\n          <input\n            type='text'\n            placeholder='Enter Username'\n            name='uname'\n            value={this.state.username}\n            onChange={this.handleChange}\n            noValidate\n          />\n          <div className='required'>{this.state.formErrors.username}</div>\n          <label htmlFor='psw'>\n            <b>Password *</b>\n          </label>\n          <input\n            type='password'\n            placeholder='Enter Password'\n            name='psw'\n            value={this.state.password}\n            onChange={this.handleChange}\n            noValidate\n          />\n          <div className='required'>{this.state.formErrors.password}</div>\n          <label htmlFor='cpsw'>\n            <b>Confirm Password *</b>\n          </label>\n          <input\n            type='password'\n            placeholder='Enter Password'\n            name='cpsw'\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            noValidate\n          />\n          <div className='required'>\n            {this.state.formErrors.confirmPassword}\n          </div>\n          <button type='submit' className='login-btn'>\n            Register\n          </button>\n          <div className='login-bottom'>\n            <Link to='/login'>Login</Link>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Register;\n","import React from 'react';\n\nimport StoryWrapper from './StoryWrapper';\nimport WithFetchData from '../hoc/WithFetchData';\n\nconst AskStory = props => {\n  return (\n    <StoryWrapper\n      stories={props.stories}\n      onPreviousClick={props.onPreviousClick}\n      onNextPreviousClick={props.onNextPreviousClick}\n      noOfMaxPage={props.noOfMaxPage}\n      currentPage={props.currentPage}\n    />\n  );\n};\n\nexport default WithFetchData('askstories')(AskStory);\n","import React from 'react';\n\nimport StoryWrapper from './StoryWrapper';\nimport WithFetchData from '../hoc/WithFetchData';\n\nconst Job = props => {\n   return (\n    <StoryWrapper\n    stories={props.stories}\n    onPreviousClick={props.onPreviousClick}\n    onNextPreviousClick={props.onNextPreviousClick}\n    noOfMaxPage={props.noOfMaxPage}\n    currentPage={props.currentPage}\n  />\n  )\n};\n\nexport default WithFetchData('jobstories')(Job);\n","import React from 'react';\n\nimport StoryWrapper from './StoryWrapper';\nimport WithFetchData from '../hoc/WithFetchData';\n\nconst NewStory = props => {\n  return (\n    <StoryWrapper\n      stories={props.stories}\n      onPreviousClick={props.onPreviousClick}\n      onNextPreviousClick={props.onNextPreviousClick}\n      noOfMaxPage={props.noOfMaxPage}\n      currentPage={props.currentPage}\n    />\n  );\n};\n\nexport default WithFetchData('newstories')(NewStory);\n","import React from 'react';\n\nimport CommentLists from './CommentLists';\nimport { getTimeDifference } from '../utils/getTimeDifference';\nimport { getCommentsByApi } from '../services/getCommentsByApi';\n\nclass SingleComment extends React.Component {\n  constructor(props) {\n    super();\n    \n    this.state = {\n      id: props.id,\n      parent: '',\n      by: '',\n      type: '',\n      text: '',\n      commentIdArray: '',\n      time: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getComment();\n  }\n\n  getComment() {\n    getCommentsByApi(this.props.id).then(data => {\n      this.setState({\n        id: data.id,\n        parent: data.parent,\n        by: data.by,\n        type: data.type,\n        text: data.text,\n        commentIdArray: data.kids,\n        time: getTimeDifference(data.time)\n      });\n    })\n    .catch(err => {return err})\n  }\n\n  render() {\n    return (\n       <div className='singlecomment'>\n          <div className='user'>\n            <span className='userName'>{this.state.by} | </span>\n            <span className='timecomment'>{this.state.time}</span>\n          </div>\n          <div dangerouslySetInnerHTML={{ __html: this.state.text }} />\n          <div className='replies'>Replies</div>\n          {this.state.commentIdArray ? (\n            <CommentLists commentIdArray={this.state.commentIdArray} />\n          ) : (\n            ''\n          )}\n        </div>\n    );\n  }\n}\n\nexport default SingleComment;\n","import axios from 'axios';\nconst getCommentsByApi = id => {\n  return axios\n    .get(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`)\n    .then(res => {\n      return res.data;\n    })\n    .catch(error => {\n      return error;\n    });\n};\n\nexport { getCommentsByApi };\n","import React from 'react';\n\nimport SingleComment from './SingleComment';\n\nclass CommentLists extends React.Component {\n  render() {\n    return( <ul>{this.props.commentIdArray\n      .map(id => <li key={id}><SingleComment id={id} /></li>)\n  }</ul>);\n  }\n}\n\nexport default CommentLists;\n","import React from 'react';\n\nimport Tab from './Tab';\nimport CommentLists from './CommentLists';\n\nclass Comments extends React.Component {\n  render() {\n    return (\n      <div>\n        <Tab />\n          <div className='comments-overlay clearfix'>\n            <div className='title'>{this.props.location.state.story.title}</div>\n            <div className='commentlists'>\n              <span className='titlecomments'>Comments</span>\n              <CommentLists\n                commentIdArray={this.props.location.state.story.commentIdArray}\n              />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst NotfoundPage = () => (\n  <div className='pagenotfound'>\n    <Link to='/'><button>Go Home</button></Link>\n  </div>\n);\nexport default NotfoundPage;\n","import React, { Component } from 'react';\nimport {  BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './assets/css/reset.css';\nimport './assets/css/layout.css';\n\nimport {\n  REGISTER,\n  API_ROOT,\n  API_ASKSTORY,\n  API_NEWSTORY,\n  API_JOBSTORY,\n  API_ITEM_ID,\n  BOOKMARKS,\n  LOGIN\n} from './constants/Common';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Bookmarks from './components/Bookmarks';\nimport Register from './components/Register';\nimport AskStory from './components/AskStory';\nimport JobStory from './components/JobStory';\nimport NewStory from './components/NewStory';\nimport Comments from './components/Comments';\nimport NotFoundPage from './components/NotFoundPage';\n\n/**\n *  Main Component class.\n *\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  /**\n   *\n   *\n   * @returns {object}\n   * @memberof App\n   */\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <Switch>\n            <Route exact path={API_ROOT} component={Home} />\n            <Route path={API_ASKSTORY} component={AskStory} />\n            <Route path={API_NEWSTORY} component={NewStory} />\n            <Route path={API_JOBSTORY} component={JobStory} />\n            <Route path={API_ITEM_ID} component={Comments} />\n            <Route path={BOOKMARKS} component={Bookmarks} />\n            <Route path={LOGIN} component={Login} />\n            <Route path={REGISTER} component={Register} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}